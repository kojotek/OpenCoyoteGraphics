//OPEN COYOTE GRAPHICS - DOKUMENTACJA//


--KOLORY I PRZEZROCZYSTOŚĆ-----------------------------------------------

	Kolory na których pracuje konsola oznaczone zostały następująco:
		CG_COLOR_BLACK
		CG_COLOR_BLUE
		CG_COLOR_GREEN
		CG_COLOR_CYAN
		CG_COLOR_RED
		CG_COLOR_MAGENTA
		CG_COLOR_YELLOW
		CG_COLOR_LIGHT_GREY
		CG_COLOR_GREY
		CG_COLOR_LIGHT_BLUE
		CG_COLOR_LIGHT_GREEN
		CG_COLOR_LIGHT_CYAN
		CG_COLOR_LIGHT_RED
		CG_COLOR_LIGHT_MAGENTA
		CG_COLOR_LIGHT_YELLOW
		CG_COLOR_WHITE
		
	Dodatkowo, możliwe jest utworzenie piksela przezroczystego (będzie pomijany
	przy kopiowaniu bitmap). W tym celu należy zdefiniować znak w obiekcie cgPixel
	jako CG_TRANSPARENT_CHAR.
	
-------------------------------------------------------------------------




--cgPixel----------------------------------------------------------------

	cgPixel to alias dla struktury CHAR_INFO z biblioteki windows.h.
	cgPixel pełni rolę pojedynczego piksela w bitmapie, ale poza kolorem
	posiada także znak ascii oraz kolor znaku.
	OCG korzysta z pól 
		CHAR_INFO.Char.AsciiChar 	(znak ascii)
		CHAR_INFO.Attribute		 	(kolor tła i znaku)
		
-------------------------------------------------------------------------




--cgPixelEdit------------------------------------------------------------

	cgPixelEdit to klasa przechowująca metody statyczne pozwalające
	na prostą obsługę obiektów cgPixel
	
		metody:
	
			cgPixelEdit::createPixel( CHAR asciiChar, WORD foregroundColor, WORD backgroundColor )
				zwracany typ: cgPixel
				argumenty:	backgroundColor - kolor tła;
							foregroundColor - kolor znaku;
							asciiChar - znak ascii;
				opis: metoda zwraca obiekt typu cgPixel o zadanych kolorach oraz znaku.


			cgPixelEdit::createPixel( WORDcolor )
				zwracany typ: cgPixel
				argumenty:	color - kolor tła;
				opis: metoda zwraca obiekt typu cgPixel o zadanym kolorze i znaku ' ' (spacja).			
			
			
			cgPixelEdit::setForegroundColor( cgPixel& charInfo, WORD foregroundColor )
				zwracany typ: void
				argumenty:	charInfo - modyfikowany obiekt typu cgPixel;
							foregroundColor - kolor znaku;
				opis: metoda zmienia kolor znaku w podanym obiekcie.	
				
				
			cgPixelEdit::setBackgroundColor( cgPixel& charInfo, WORD backgroundColor )
				zwracany typ: void
				argumenty:	charInfo - modyfikowany obiekt typu cgPixel;
							backgroundColor - kolor tła;
				opis: metoda zmienia kolor tła w podanym obiekcie.
				
				
			cgPixelEdit::setAsciiChar( cgPixel& charInfo, CHAR asciiChar )
				zwracany typ: void
				argumenty:	charInfo - modyfikowany obiekt typu cgPixel;
							asciiChar - znak;
				opis: metoda zmienia znak w podanym obiekcie.	
		
-------------------------------------------------------------------------




--cgVector<T>-------------------------------------------------------------

		aliasy:
		
			cgVector<int> = cgVectorInt;
			cgVector<float> = cgVectorFloat;
			
		pola:
	
			T x;
			T y;
		
		konstruktory:
			
			cgCoord( T argX, T argY )
			
		operatory:
			
			bool operator == ( const cgVector<T> &a );
			bool operator != ( const cgVector<T> &a );
			cgVector<T> operator + ( const cgVector<T> &a );
			cgVector<T> operator - ( const cgVector<T> &a );
			cgVector<T> operator * ( const T &a );
			cgVector<T> operator / ( const T &a );
			cgVector<T> & operator += ( const cgVector<T> &a );
			cgVector<T> & operator -= ( const cgVector<T> &a );
			cgVector<T> & operator *= ( const T &a );
			cgVector<T> & operator /= ( const T &a );
			
			
-------------------------------------------------------------------------




--cgSize-----------------------------------------------------------------

	cgSize służy do przechowywania rozmiarów bitmap i okien.
	
		pola:
	
			int width;
			int height;
		
		konstruktory:
			
			cgSize( int w, int h ) - ustawia wartości width na w oraz height na h
			cgSize() - ustawia wartości width oraz height na 0
			
-------------------------------------------------------------------------




--cgKeyboard-------------------------------------------------------------

	cgKeyboard służy do obsługi wejścia klawiaturowego.
	
		pola:
		
			bitset<256>

-------------------------------------------------------------------------